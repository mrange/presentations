// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_H_
# define SHADER_H_
# define VAR_fcol "v"

const char *shader_fx =
 "#version 430\n"
 "#define TIME S.x\n"
 "#define RESOLUTION S.yz\n"
 "uniform vec4 S;"
 "out vec4 v;\n"
 "#define PI 3.141592654\n"
 "#define PI_2 (0.5*PI)\n"
 "#define TAU (2.0*PI)\n"
 "#define ROT(a)mat2(cos(a),sin(a),-sin(a),cos(a))\n"
 "#define BPM (143.0*0.5)\n"
 "#define PCOS(a)0.5*(cos(a)+1.0)\n"
 "const int a=max(8,0);"
 "const float P=.25*float(12-a);"
 "vec4 n(vec4 P,vec4 v)"
 "{"
   "float a=v.w+P.w*(1.-v.w);"
   "return a>0.?"
     "vec4((v.xyz*v.w+P.xyz*P.w*(1.-v.w))/a,a):"
     "vec4(0);"
 "}"
 "vec3 n(vec3 v,vec4 a)"
 "{"
   "return mix(v,a.xyz,a.w);"
 "}"
 "float n(float v)"
 "{"
   "float a=v*v;"
   "return clamp(v*(27.+a)/(27.+9.*a),-1.,1.);"
 "}"
 "vec3 s(float v)"
 "{"
   "float a=v*.5;"
   "return vec3(-.25*(vec2(cos(a),sin(a*sqrt(2.)))+vec2(cos(a*sqrt(.75)),sin(a*sqrt(.6)))),v);"
 "}"
 "vec3 t(float a)"
 "{"
   "return(s(a+.05)-s(a-.05))/.1;"
 "}"
 "vec3 p(float a)"
 "{"
   "return(t(a+.05)-t(a-.05))/.1;"
 "}"
 "vec3 n(vec3 v,vec2 a,float P,float n)"
 "{"
   "vec2 c=a,f=a;"
   "for(float w=0.;w<4.;w++)"
     "{"
       "f=fract(f*2.+.0125*P)-.5;"
       "float s=length(f)*exp(-length(c));"
       "vec3 m=(1.+cos(vec3(0,1,2)+TAU*(length(c)+w*.4+P*.2)))*.5;"
       "s=sin(s*8.+P)/8.;"
       "s=abs(s);"
       "s-=.0025;"
       "s=max(s,.005);"
       "s=.0125/s;"
       "s*=s;"
       "v+=m*s;"
     "}"
   "return.5*v;"
 "}"
 "vec3 n(vec2 v,float a,float f)"
 "{"
   "vec3 s=vec3(0);"
   "vec2 P=v;"
   "P+=.5*sin(vec2(1,sqrt(.5))*a*.21);"
   "s=n(s,P,a,f);"
   "s-=.75*vec3(0,1,2).zyx*dot(v,v);"
   "return clamp(s,0.,4.);"
 "}"
 "vec4 n(vec3 v,vec3 a,vec3 s,vec3 P,float c,float f)"
 "{"
   "vec2 w=(s-P*vec3(1,1,0)).xy;"
   "float m=length(w);"
   "w*=mix(.5,.75,.5+.5*sin(f*.071));"
   "float z=.0625*TIME+.125*f;"
   "w*=ROT(-z);"
   "float T=smoothstep(.1,.15,m);"
   "if(T<.05)"
     "return vec4(0);"
   "vec4 r=vec4(0);"
   "r.xyz=n(w,z,f);"
   "float R=max(max(r.x,r.y),r.z)*.75;"
   "r.w=n(.5+m+max(R,0.))*T;"
   "return r;"
 "}"
 "vec3 n(vec3 v,vec3 P,vec3 f,vec3 c,vec2 m)"
 "{"
   "float w=length(m);"
   "vec2 r=m+1./RESOLUTION.xy;"
   "float T=1.75+.75*pow(w,1.5)*n(w+.9*PCOS(10.*m.x)*PCOS(10.*m.y));"
   "vec3 R=normalize(m.x*P+m.y*f+T*v),z=normalize(r.x*P+r.y*f+T*v);"
   "float B=floor(c.z/.25);"
   "vec4 N=vec4(0);"
   "bool i=false;"
   "float b=0.;"
   "for(int I=1;I<=12;++I)"
     "{"
       "float t=.25*B+.25*float(I),l=(t-c.z)/R.z;"
       "if(l>0.&&N.w<.975)"
         "{"
           "vec3 p=c+R*l;"
           "b=l;"
           "vec3 x=s(p.z);"
           "vec4 d=n(c,R,p,x,3.*length(p-c-z*l),B+float(I));"
           "float y=p.z-c.z;"
           "d.w*=smoothstep(0.,.025,y)*smoothstep(.25*float(12),.25*float(a),y);"
           "d=clamp(d,0.,1.);"
           "N=n(d,N);"
         "}"
       "else"
         "{"
           "i=true;"
           "N.w=N.w>.975?"
             "1.:"
             "N.w;"
           "break;"
         "}"
     "}"
   "return n(vec3(0),N);"
 "}"
 "vec3 n(vec2 v,vec2 a)"
 "{"
   "float f=.25*TIME*BPM/60.;"
   "vec3 P=s(f),c=t(f),w=p(f),z=normalize(c),y=normalize(cross(normalize(vec3(0,1,0)+w),z)),r=n(z,y,cross(z,y),P,v);"
   "r*=smoothstep(0.,4.,TIME);"
   "r=clamp(r,0.,1.);"
   "return sqrt(r);"
 "}"
 "void main()"
 "{"
   "vec2 P=gl_FragCoord.xy/RESOLUTION.xy,s=-1.+2.*P,a=s;"
   "s.x*=RESOLUTION.x/RESOLUTION.y;"
   "vec3 c=n(s,a);"
   "v=vec4(c,1);"
 "}";

#endif // SHADER_H_
